




// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\package.json
{
  "name": "d4utreborn",
  "version": "1.0.0",
  "description": "D4UTReborn Project",
  "main": "dist/server.js",
  "scripts": {
    "build": "npm-run-all build:ts build:copy-public",
    "build:ts": "tsc",
    "build:copy-public": "copyfiles -u 1 public/**/* dist/public",
    "dev": "concurrently \"npm run watch:build\" \"npm run watch:copy-public\" \"npm run watch:server\" \"npm run serve\"",
    "watch:build": "tsc --watch",
    "watch:copy-public": "nodemon -w public -e html,css,js -x \"npm run build:copy-public\"",
    "watch:server": "nodemon dist/server.js",
    "serve": "browser-sync start --proxy localhost:3000 --files 'dist/**/*'",
    "open": "opn http://localhost:3001 --app=\"chrome\"",
    "start-dev": "npm run dev && npm run open",
    "fetch-structure": "node scripts/fetch-structure.js"
  },
  "dependencies": {
    "express": "^4.17.1",
    "fs": "^0.0.1-security",
    "knex": "^3.1.0",
    "path": "^0.12.7",
    "sqlite3": "^5.1.7"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node": "^20.12.13",
    "browser-sync": "^3.0.2",
    "concurrently": "^6.5.1",
    "copyfiles": "^2.4.1",
    "nodemon": "^3.1.2",
    "npm-run-all": "^4.1.5",
    "typescript": "^4.4.3"
  },
  "author": "",
  "license": "ISC"
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\tsconfig.json
{
  "compilerOptions": {
    "target": "ES6",
    "module": "commonjs",
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "types": ["node"]
  },
  "include": ["src"]
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>D4UTReborn</title>
    <link rel="stylesheet" href="css/styles.css" />
</head>
<body>
    <header>
        <h1>D4UT.net | UBB | Uglier But Better</h1>
        <nav class="header-menu">
            <button id="home-button">Home</button>
            <div class="dropdown">
                <button class="dropdown-toggle">Profile</button>
                <div class="dropdown-content">
                    <button id="save-build-button">Save Build</button>
                    <button id="profile-button">Load Builds</button>
                </div>
            </div>
            <div class="dropdown">
                <button class="dropdown-toggle">Select</button>
                <div class="dropdown-content">
                    <button id="select-class-button">Class</button>
                    <button id="select-skill-button">Skill</button>
                    <button id="select-helmet-button">Helmet</button>
                    <button id="select-chest-button">Chest</button>
                    <button id="select-pant-button">Pants</button> <!-- New Button -->
                </div>
            </div>
        </nav>
    </header>

    <main>
        <div id="prompt-message" style="display:none;">
            Please select a class by clicking <a href="#" id="select-class-link">here</a>.
        </div>
        
        <aside class="sidebar">
            <section id="dps-box" class="section">
                <h2>DPS</h2>
                <ul id="dps-content">
                    <!-- DPS content will be dynamically added here -->
                </ul>
            </section>
            <section id="suggestion-box" class="section">
                <h2>Suggestion</h2>
                <p>Patreon Only</p>
            </section>
        </aside>
        <div class="main-content">
            <div id="information" class="section">
                <!-- Welcome message will be loaded here -->
            </div>
            <section id="class-selection" class="section" style="display: none">
                <h2>Select Class</h2>
                <div id="classes-container" class="classes-container"></div>
                <div class="buttons">
                    <button id="class-confirm" style="display: none">Next</button>
                </div>
            </section>
            <section id="profile-page" class="section" style="display: none">
                <h2>Your Builds</h2>
                <div id="builds-container" class="builds-container"></div>
                <div class="buttons">
                    <button id="profile-back">Back</button>
                </div>
            </section>
            <section id="skill-selection" class="section" style="display: none">
                <h2>Select Skill</h2>
                <div id="skills-container" class="skills-container"></div>
                <div class="buttons">
                    <button id="skill-back">Back</button>
                    <button id="skill-confirm">Next</button>
                </div>
            </section>
            <section id="item-selection" class="section" style="display: none">
                <h2>Select Item</h2>
                <div id="items-container" class="items-container"></div>
                <div class="buttons">
                    <button id="item-back">Back</button>
                    <button id="item-confirm">Next</button>
                </div>
            </section>
            <section id="item-details" class="section" style="display: none">
                <h2>Item Details</h2>
                <div class="item-details-container">
                    <div id="item-image-container" class="item-image-container"></div>
                    <div id="item-info-container" class="item-info-container"></div>
                </div>
                <div class="buttons">
                    <button id="item-details-back">Back</button>
                    <button id="item-details-confirm">Confirm</button>
                </div>
            </section>
            <section id="affix-selection" class="section" style="display: none">
                <h2>Pick 3 Affixes</h2>
                <div id="affix-details-container" class="item-details-container">
                    <div id="affixes-container" class="affixes-container"></div>
                </div>
                <div class="buttons">
                    <button id="affix-back">Back</button>
                    <button id="affix-confirm">Next</button>
                </div>
            </section>
        </div>
        <aside class="sidebar-right">
            <section id="total-attribute-box" class="section">
                <h2>Total Attribute</h2>
                <ul id="total-attribute-content">
                    <!-- Total Attribute content will be dynamically added here -->
                </ul>
            </section>
            <section id="summary-box" class="section">
                <h2>Summary</h2>
                <ul id="summary-content">
                    <!-- Summary content will be dynamically added here -->
                </ul>
            </section>
        </aside>
    </main>
    <script type="module" src="js/main.js"></script>
    <script type="module" src="js/navigation.js"></script>
  </body>
</html>





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\welcome.html
<div id="welcome-message">
    <p>Welcome to the Diablo 4 Damage Calculator Tool v1.0!</p>
    <p>This tool helps you calculate and optimize your damage output in Diablo 4.</p>
    <h3>How to Use:</h3>
    <ul>
        <li><strong>Select Class:</strong> Choose your class to load relevant data.</li>
        <li><strong>Select Skill:</strong> Pick skills to see their effects.</li>
        <li><strong>Select Gear:</strong> Equip unique items for additional boosts.</li>
        <li><strong>Automatic Calculation:</strong> Results update in real-time as you make changes.</li>
    </ul>
    <h3>Panels Overview:</h3>
    <ul>
        <li><strong>DPS:</strong> Shows your current Damage Per Second.</li>
        <li><strong>Total Attribute:</strong> Displays all selected attributes.</li>
        <li><strong>Summary:</strong> Summarizes your build choices.</li>
        <li><strong>Suggestion:</strong> Special tips and suggestions (Patreon Only).</li>
    </ul>
    <button id="get-started-button">Get Started</button>
</div>





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\css\styles.css
@keyframes pulse {
  0% {
    box-shadow: 0 0 5px rgba(255, 204, 0, 0.8);
  }
  50% {
    box-shadow: 0 0 10px rgba(255, 204, 0, 1);
  }
  100% {
    box-shadow: 0 0 5px rgba(255, 204, 0, 0.8);
  }
}

body {
  font-family: 'Courier New', monospace;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background: url('/assets/background.webp') no-repeat center center fixed;
  background-size: cover;
  color: #e0e0e0;
  font-size: 16px;
}

header {
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  text-align: center;
  padding: 15px 0;
}

.header-menu {
  display: flex;
  justify-content: center;
  gap: 20px;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-toggle {
  background-color: #222;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #111;
  min-width: 160px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
  z-index: 1;
  flex-direction: column;
  top: 100%; /* Adjusted to eliminate gap */
  left: 0;
}

.dropdown-content button {
  background-color: #222;
  color: #fff;
  padding: 10px 20px;
  border: none;
  text-align: left;
  cursor: pointer;
  width: 100%;
}

.dropdown-content button:hover {
  background-color: #333;
}

.dropdown:hover .dropdown-content {
  display: flex;
}

.dropdown:hover .dropdown-toggle {
  background-color: #333;
}

main {
  display: flex;
  justify-content: space-between;
  max-height: 908px;
}

#welcome-message {
  background-color: rgba(0, 0, 0, 0.8);
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  color: #e0e0e0;
  max-width: 800px;
  margin: 20px auto;
  line-height: 1.6;
}

#welcome-message p {
  margin-bottom: 15px;
}

#welcome-message h3 {
  margin-top: 20px;
  margin-bottom: 10px;
  color: #ffcc00;
}

#welcome-message ul {
  padding-left: 20px;
  list-style-type: disc;
}

#welcome-message ul li {
  margin-bottom: 10px;
}


.sidebar, .sidebar-right {
  flex: 1;
  max-width: 300px;
  background-color: rgba(0, 0, 0, 0.8);
  padding: 15px;
  box-sizing: border-box;
  max-height: 750px;
  position: relative;
}

.main-content {
  flex: 3;
  padding: 15px;
  max-width: 770px;
  background-color: rgba(0, 0, 0, 0.85);
  border-radius: 5px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.7);
}

.section {
  background-color: rgba(0, 0, 0, 0.85);
  padding: 20px;
  border: 1px solid #444;
  border-radius: 5px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.7);
  margin-bottom: 15px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.section h2 {
  margin-top: 0;
  color: #ccc;
}

.section p,
.section ul {
  margin: 0;
  padding: 0;
}

.section ul {
  list-style-type: none;
  padding: 0;
  margin: 10px 0;
}

.section ul li {
  margin-bottom: 10px;
}

.classes-container,
.skills-container,
.items-container,
.affixes-container {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
  max-height: 60vh;
  overflow-y: auto;
  padding: 10px;
  width: 100%;
  max-width: 750px;
}

.item-details-container {
  display: flex;
  gap: 20px;
  justify-content: center;
  align-items: center;
}

.item-image-container img {
  width: 150px;
  height: 150px;
  border-radius: 5px;
}

.item-info-container {
  text-align: left;
}

.skill,
.class-card,
.skill-card,
.item-card,
.affix-card {
  background-color: rgba(25, 25, 25, 0.85);
  padding: 15px;
  border: 1px solid #555;
  border-radius: 5px;
  flex: 1 1 calc(33.333% - 30px);
  box-sizing: border-box;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;
}

.skill:hover,
.class-card:hover,
.skill-card:hover,
.item-card:hover,
.affix-card:hover {
  background-color: rgba(35, 35, 35, 0.85);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
}

.skill.selected,
.class-card.selected,
.skill-card.selected,
.item-card.selected,
.affix-card.selected {
  border-color: #ffcc00;
  animation: pulse 2s infinite;
}

.skill img,
.class-card img,
.skill-card img,
.item-card img {
  width: 80px;
  height: 80px;
  border-radius: 5px;
}

button {
  background-color: #222;
  color: #fff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
}

button:hover {
  background-color: #333;
}

.buttons {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.slider-container {
  margin-top: 10px;
}

.slider {
  width: 100%;
  max-width: 300px;
}

#summary-box, #total-attribute-box, #dps-box {
  background-color: rgba(0, 0, 0, 0.85);
  padding: 20px;
  border: 1px solid #444;
  border-radius: 5px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.7);
  margin-top: 15px;
}

#summary-box h2, #total-attribute-box h2, #dps-box h2 {
  color: #ccc;
}

#summary-content, #total-attribute-content, #dps-content {
  list-style-type: none;
  padding: 0;
}

#summary-content li, #total-attribute-content li, #dps-content li {
  margin-bottom: 10px;
}

.clickable-summary-item {
  cursor: pointer;
  color: #ffcc00;
  transition: color 0.2s;
}

.clickable-summary-item:hover {
  color: #fff;
}

.builds-container {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.build-card {
  background-color: rgba(25, 25, 25, 0.85);
  padding: 15px;
  border: 1px solid #555;
  border-radius: 5px;
  text-align: center;
}

.build-card h3 {
  margin-top: 0;
  color: #ccc;
}

.build-card button {
  background-color: #222;
  color: #fff;
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 14px;
  margin-top: 10px;
}

.build-card button:hover {
  background-color: #333;
}

#landing-page {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: #111;
  text-align: center;
}

.landing-content {
  max-width: 600px;
  padding: 20px;
  background: rgba(0, 0, 0, 0.8);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.7);
  border-radius: 10px;
}

.landing-content h1 {
  margin-bottom: 20px;
  font-size: 2.5em;
  color: #ffcc00;
}

.landing-content ul {
  text-align: left;
  margin: 20px 0;
  color: #ccc;
}

.landing-content button {
  padding: 10px 20px;
  font-size: 1.2em;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.landing-content button:hover {
  background-color: #0056b3;
}

#affix-selection {
  display: none;
}

#affixes-container {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  justify-content: center;
  padding: 10px;
  max-width: 750px;
}

.affix-container {
  background-color: rgba(25, 25, 25, 0.85);
  padding: 15px;
  border: 1px solid #555;
  border-radius: 5px;
  text-align: center;
  cursor: pointer;
  flex: 1 1 calc(33.333% - 30px);
  box-sizing: border-box;
}

.affix-container:hover {
  background-color: rgba(35, 35, 35, 0.85);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
}

.affix-container.selected {
  border-color: #ffcc00;
  box-shadow: 0 0 10px rgba(255, 204, 0, 0.8);
}

.affix-input {
  margin-right: 5px;
}

#affix-details-container {
  display: flex;
  gap: 20px;
  justify-content: center;
  align-items: center;
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\affixSelection.js
// public/js/affixSelection.js
export function populateAffixSelection(affixes) {
  const affixesContainer = document.getElementById("affixes-container");
  affixesContainer.innerHTML = "";

  affixes.forEach((affix, index) => {
      const affixCheckbox = document.createElement("input");
      affixCheckbox.type = "checkbox";
      affixCheckbox.className = "affix-input";
      affixCheckbox.id = `affix-${index}`;
      affixCheckbox.value = affix;

      const affixLabel = document.createElement("label");
      affixLabel.htmlFor = `affix-${index}`;
      affixLabel.textContent = affix;

      const affixContainer = document.createElement("div");
      affixContainer.className = "affix-container";
      affixContainer.appendChild(affixCheckbox);
      affixContainer.appendChild(affixLabel);

      affixesContainer.appendChild(affixContainer);
  });
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\buildManager.js
// public/js/buildManager.js

import { fetchSkills, fetchUniqueItems } from "./dataFetchers.js";
import { updateSummary } from "./summary.js";

export function saveBuild(selectedClass, selectedSkill, selectedItem, summaryContent) {
  const buildName = prompt("Enter a name for your build:");
  if (!buildName) return;

  const build = {
    class: selectedClass,
    skill: selectedSkill,
    item: selectedItem,
    summary: summaryContent.innerHTML,
  };

  let builds = JSON.parse(localStorage.getItem("builds")) || [];
  builds.push({ name: buildName, build });
  localStorage.setItem("builds", JSON.stringify(builds));

  loadBuilds();
}

export function loadBuilds() {
  console.log("Loading builds");
  const buildsContainer = document.getElementById("builds-container");
  buildsContainer.innerHTML = "";
  const builds = JSON.parse(localStorage.getItem("builds")) || [];

  builds.forEach(({ name, build }, index) => {
    const buildCard = document.createElement("div");
    buildCard.className = "build-card";
    buildCard.innerHTML = `
              <h3>${name}</h3>
              <button onclick="loadBuild(${index})">Load</button>
              <button onclick="deleteBuild(${index})">Delete</button>
          `;
    buildsContainer.appendChild(buildCard);
  });
}

export function loadBuild(index) {
  console.log(`Loading build at index ${index}`);
  const builds = JSON.parse(localStorage.getItem("builds"));
  const { build } = builds[index];

  const selectedClass = build.class;
  const selectedSkill = build.skill;
  const selectedItem = build.item;
  const summaryContent = document.getElementById("summary-content");
  
  summaryContent.innerHTML = build.summary;

  // Fetch items and skills again to ensure the selections are updated
  fetchSkills(selectedClass);
  fetchUniqueItems(selectedClass);

  // Add event listeners for the summary items
  document.querySelectorAll("#summary-content li").forEach((item) => {
    item.addEventListener("click", () => {
      const sectionType = item.getAttribute("data-type");
      console.log(`Navigating to section: ${sectionType}`);
      navigateToSection(sectionType);
    });
  });
}

export function deleteBuild(index) {
  console.log(`Deleting build at index ${index}`);
  let builds = JSON.parse(localStorage.getItem("builds"));
  builds.splice(index, 1);
  localStorage.setItem("builds", JSON.stringify(builds));

  loadBuilds();
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\classSelection.js
import { updateSummary } from "./summary.js";

export function initClassSelection(selectClassCallback, currentClass) {
  const classesContainer = document.getElementById('classes-container');
  const classConfirmButton = document.getElementById('class-confirm');

  const classes = [
    { name: 'Barbarian', icon: 'barb.webp' },
    { name: 'Sorceress', icon: 'sorc.webp' },
    { name: 'Necromancer', icon: 'necro.webp' },
    { name: 'Druid', icon: 'druid.webp' },
    { name: 'Rogue', icon: 'rogue.webp' }
  ];

  classes.forEach(classItem => {
    const classCard = document.createElement('div');
    classCard.className = 'class-card';
    classCard.innerHTML = `
      <img src="/assets/classes/${classItem.icon}" alt="${classItem.name}">
      <h3>${classItem.name}</h3>
    `;
    classCard.addEventListener('click', function() {
      if (classItem.name === currentClass) {
        console.log(`Class ${classItem.name} is already selected.`);
        return; // Do nothing if the class is already selected
      }
      document.querySelectorAll('.class-card').forEach(card => card.classList.remove('selected'));
      classCard.classList.add('selected');
      console.log(`Selected class: ${classItem.name}`);
      selectClassCallback(classItem.name);
      classConfirmButton.style.display = 'block';

      // Update summary without navigating to the next section
      const selectedClass = classItem.name;
      updateSummary("Class", selectedClass);
    });

    classesContainer.appendChild(classCard);
  });
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\dataFetchers.js
// public/js/dataFetchers.js
export function fetchSkills(selectedClass, populateSkillDropdowns, displaySkillDetails, addSkillSelectionListeners) {
    console.log("fetchSkills function called");
    console.log(`Fetching skills for class: ${selectedClass}`);

    fetch(`/api/skills/${selectedClass}`)
        .then((response) => {
            console.log("Fetch response received");
            if (!response.ok) {
                console.error("Network response was not ok");
                throw new Error("Network response was not ok");
            }
            return response.json();
        })
        .then((skills) => {
            console.log(`Skills loaded for ${selectedClass}:`, skills);
            populateSkillDropdowns(skills);
            displaySkillDetails(skills, selectedClass);
            addSkillSelectionListeners(skills);
        })
        .catch((error) => {
            console.error("Error fetching skills:", error);
        });
}

export function fetchUniqueItems(selectedClass, itemType, populateUniqueItems) {
    console.log("fetchUniqueItems function called");

    fetch(`/api/unique-items`)
        .then((response) => {
            console.log("Fetch response received");
            if (!response.ok) {
                console.error("Network response was not ok");
                throw new Error("Network response was not ok");
            }
            return response.json();
        })
        .then((items) => {
            console.log(`Unique items loaded:`, items);
            const filteredItems = items.filter(
                (item) =>
                    item.type.toLowerCase().includes(itemType) &&
                    (!item.class || item.class.toLowerCase() === selectedClass.toLowerCase())
            );
            populateUniqueItems(filteredItems);
        })
        .catch((error) => {
            console.error("Error fetching unique items:", error);
        });
}

export function fetchAffixes(selectedClass, gearType, populateAffixSelection) {
    console.log("fetchAffixes function called");
    console.log(`Fetching affixes for class: ${selectedClass}, gear type: ${gearType}`);

    fetch(`/api/affixes/${selectedClass}/${gearType}`)
        .then((response) => {
            console.log("Fetch response received");
            if (!response.ok) {
                console.error("Network response was not ok");
                alert("Failed to fetch affixes. Please try again later.");
                throw new Error("Network response was not ok");
            }
            return response.json();
        })
        .then((data) => {
            console.log(`Affixes loaded:`, data);
            populateAffixSelection(data.affixes);
        })
        .catch((error) => {
            console.error("Error fetching affixes:", error);
            alert("An error occurred while fetching affixes. Please try again.");
        });
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\eventListeners.js
import { navigateToSection } from "./main.js"; // Import the navigateToSection function

export function initializeEventListeners() {
  // Load welcome message
  fetch('welcome.html')
    .then(response => response.text())
    .then(data => {
      document.getElementById('information').innerHTML = data;
      const getStartedButton = document.getElementById("get-started-button");
      if (getStartedButton) {
        getStartedButton.addEventListener("click", () => {
          console.log("Get Started button clicked");
          navigateToSection("Class");
        });
      }
    })
    .catch(error => console.error('Error loading welcome message:', error));

  // You can add more event listeners here in the future
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\helper.js
export function calculateTotalAttributes(selectedItems) {
  const totalAttributes = {};
  const totalAttributesList = document.getElementById('total-attributes-list');
  console.log('Calculating total attributes...');

  document.querySelectorAll('.attribute-value').forEach(input => {
    const attribute = input.getAttribute('data-attribute');
    const value = parseInt(input.value) || 0;
    if (!totalAttributes[attribute]) {
      totalAttributes[attribute] = 0;
    }
    totalAttributes[attribute] += value;
    console.log(`Attribute: ${attribute}, Value: ${value}, Total so far: ${totalAttributes[attribute]}`);
  });

  console.log('Total attributes calculated:', totalAttributes);
  totalAttributesList.innerHTML = Object.keys(totalAttributes)
    .filter(attr => totalAttributes[attr] > 0)
    .map(attr => `<li>${attr}: ${totalAttributes[attr]}</li>`)
    .join('');
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\itemDetails.js
// public/js/itemDetails.js

import { calculateTotalAttributes } from './helper.js';

export function displayItemDetails(selectedItems) {
  Object.keys(selectedItems).forEach(category => {
    const item = selectedItems[category];
    const itemContainer = document.querySelector(`#${category}-detail .details`);
    if (item) {
      itemContainer.innerHTML = `
        <h3>${item.name}</h3>
        <p>${item.description}</p>
        <ul>
          ${item.attributes.map((attr, index) => `
            <li>
              ${attr}
              <input type="number" class="attribute-value" data-category="${category}" data-attribute="${attr}" value="0" placeholder="Enter value">
            </li>`).join('')}
        </ul>
      `;
      console.log(`Displaying details for ${category}:`, item);
    } else {
      itemContainer.innerHTML = '<p>No item selected.</p>';
    }
  });

  document.querySelectorAll('.attribute-value').forEach(input => {
    input.addEventListener('input', () => calculateTotalAttributes(selectedItems));
  });
}

export function displaySelectedItemDetails(item) {
  console.log("Displaying selected item details:", item);
  const itemImageContainer = document.getElementById("item-image-container");
  const itemInfoContainer = document.getElementById("item-info-container");

  itemImageContainer.innerHTML = `<img src="${item.image}" alt="${item.name}">`;

  itemInfoContainer.innerHTML = `
    <h3>${item.name}</h3>
    <p><strong>Type:</strong> ${item.type}</p>
    ${item.attributes
      .map(
        (attribute, index) => `
      <div class="input-container">
        <p><strong>${attribute}:</strong></p>
        <input type="number" class="attribute-input" id="attribute-${index}">
      </div>
    `
      )
      .join("")}
    <p><strong>Effect:</strong> ${item.effect}</p>
    <p><strong>Lore:</strong> ${item.lore}</p>
  `;
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\itemSelection.js
export function initItemSelection(displayItemDetails, calculateTotalAttributes) {
  const dropdownsContainer = document.getElementById('dropdowns');
  let selectedItems = {
    helmet: null,
    chest: null,
    boots: null,
    weapon1: null,
    weapon2: null,
    pants: null, // Add pants to the selectedItems object
    axe2h: null
  };

  function populateItemDropdowns(items) {
    console.log('Populating item dropdowns with items:', items);
    const categories = ['helmet', 'chest', 'boots', 'gloves', 'amulets', 'pants', 'ring', 'weapon', 'offhand', 'shield'];
    dropdownsContainer.innerHTML = ''; // Clear previous dropdowns

    categories.forEach(category => {
      const categoryItems = items.filter(item => item.type === category);

      if (categoryItems.length > 0) {
        const label = document.createElement('label');
        label.htmlFor = category;
        label.textContent = `Choose a ${category}:`;

        const select = document.createElement('select');
        select.id = category;

        categoryItems.forEach(item => {
          const option = document.createElement('option');
          option.value = JSON.stringify(item); // Store item data in option value
          option.text = item.name;
          select.appendChild(option);
        });

        select.addEventListener('change', function() {
          const selectedItem = JSON.parse(select.value);
          selectedItems[category] = selectedItem;
          console.log(`Selected item for ${category}:`, selectedItem);
          displayItemDetails(selectedItems);
          calculateTotalAttributes(selectedItems);
        });

        dropdownsContainer.appendChild(label);
        dropdownsContainer.appendChild(select);
        dropdownsContainer.appendChild(document.createElement('br'));

        // Trigger change event to load default selected item details
        select.dispatchEvent(new Event('change'));
      }
    });
  }

  return { populateItemDropdowns };
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\main.js
// public/js/main.js
import { initClassSelection } from "./classSelection.js";
import { initItemSelection } from "./itemSelection.js";
import { initSkillSelection } from "./skillSelection.js";
import { displayItemDetails, displaySelectedItemDetails } from "./itemDetails.js";
import { calculateTotalAttributes } from "./helper.js";
import { displaySkillDetails } from "./skillDetails.js";
import { initUniqueItemSelection } from "./uniqueItemSelection.js";
import { updateSummary, resetSummary } from "./summary.js";
import { fetchSkills, fetchUniqueItems, fetchAffixes } from "./dataFetchers.js";
import { saveBuild, loadBuilds, loadBuild, deleteBuild } from "./buildManager.js";
import { initializeEventListeners } from "./eventListeners.js";
import { populateAffixSelection } from "./affixSelection.js"; // Import the populateAffixSelection function

let selectedClass = "";
let selectedSkill = null;
let selectedItem = null;
let selectedAffixes = [];


const { populateUniqueItems } = initUniqueItemSelection((item) => {
  selectedItem = item;
  if (selectedItem.name === "Custom Helmet") {
      fetchAffixes(selectedClass, "helm", populateAffixSelection); // Ensure 'helm' is passed as gearType
      navigateToSection("Affixes");
  } else if (selectedItem.name === "Custom Chest") {
      fetchAffixes(selectedClass, "chest", populateAffixSelection); // Ensure 'chest' is passed as gearType
      navigateToSection("Affixes");
  } else if (selectedItem.name === "Custom Pants") { // New Item Type
      fetchAffixes(selectedClass, "pants", populateAffixSelection); // Ensure 'pant' is passed as gearType
      navigateToSection("Affixes");
  } else {
      displaySelectedItemDetails(selectedItem);
      navigateToSection("Item Details");
  }
});


function navigateToSection(type) {
    console.log(`Navigating to section: ${type}`);
    const informationSection = document.getElementById("information");
    const classSelectionSection = document.getElementById("class-selection");
    const skillSelectionSection = document.getElementById("skill-selection");
    const itemSelectionSection = document.getElementById("item-selection");
    const itemDetailsSection = document.getElementById("item-details");
    const affixSelectionSection = document.getElementById("affix-selection");
    const profilePageSection = document.getElementById("profile-page");

    informationSection.style.display = "none";
    classSelectionSection.style.display = "none";
    skillSelectionSection.style.display = "none";
    itemSelectionSection.style.display = "none";
    itemDetailsSection.style.display = "none";
    affixSelectionSection.style.display = "none";
    profilePageSection.style.display = "none";

    switch (type) {
        case "Information":
            informationSection.style.display = "block";
            break;
        case "Class":
            classSelectionSection.style.display = "block";
            break;
        case "Skill":
            skillSelectionSection.style.display = "block";
            break;
        case "Helmet":
            itemSelectionSection.style.display = "block";
            fetchUniqueItems(selectedClass, "helm", populateUniqueItems);
            break;
        case "Chest":
            itemSelectionSection.style.display = "block";
            fetchUniqueItems(selectedClass, "chest", populateUniqueItems);
            break;
        case "Pant":
            itemSelectionSection.style.display = "block";
            fetchUniqueItems(selectedClass, "pant", populateUniqueItems);
            break;
        case "Item Details":
            itemDetailsSection.style.display = "block";
            break;
        case "Profile":
            profilePageSection.style.display = "block";
            break;
        case "Affixes":
            affixSelectionSection.style.display = "block";
            break;
        default:
            console.error(`Unknown section: ${type}`);
    }
}

document.addEventListener("DOMContentLoaded", function () {
    initializeEventListeners(); // Initialize event listeners
    console.log("DOMContentLoaded event triggered");

    const classConfirmButton = document.getElementById("class-confirm");
    const skillConfirmButton = document.getElementById("skill-confirm");
    const skillBackButton = document.getElementById("skill-back");
    const itemConfirmButton = document.getElementById("item-confirm");
    const itemBackButton = document.getElementById("item-back");
    const itemDetailsBackButton = document.getElementById("item-details-back");
    const itemDetailsConfirmButton = document.getElementById("item-details-confirm");
    const affixConfirmButton = document.getElementById("affix-confirm");
    const affixBackButton = document.getElementById("affix-back");
    const profileBackButton = document.getElementById("profile-back");
    const homeButton = document.getElementById("home-button");
    const selectClassButton = document.getElementById("select-class-button");
    const selectSkillButton = document.getElementById("select-skill-button");
    const selectHelmetButton = document.getElementById("select-helmet-button");
    const selectChestButton = document.getElementById("select-chest-button");
    const selectPantButton = document.getElementById("select-pant-button"); // New Button

    const { populateSkillDropdowns } = initSkillSelection((skill) => {
        selectedSkill = skill;
        updateSummary("Skill", skill.name);
    });

    function addSkillSelectionListeners(skills) {
        const skillElements = document.querySelectorAll(".skill");
        skillElements.forEach((skillElement, index) => {
            skillElement.addEventListener("click", () => {
                skillElements.forEach((el) => el.classList.remove("selected"));
                skillElement.classList.add("selected");
                selectedSkill = skills[index];
                console.log(`Selected skill: ${selectedSkill.name}`);
                updateSummary("Skill", selectedSkill.name); // Update summary upon skill selection
            });
        });
    }

    classConfirmButton.addEventListener("click", () => {
        if (!selectedClass) {
            alert("Please select a class.");
            return;
        }
        console.log(`Class selected: ${selectedClass}`);
        updateSummary("Class", selectedClass);
        const classSelectionSection = document.getElementById("class-selection");
        const skillSelectionSection = document.getElementById("skill-selection");
        classSelectionSection.style.display = "none";
        skillSelectionSection.style.display = "block";
        fetchSkills(selectedClass, populateSkillDropdowns, displaySkillDetails, addSkillSelectionListeners);
    });

    skillConfirmButton.addEventListener("click", () => {
        if (!selectedSkill) {
            alert("Please select a skill.");
            return;
        }
        console.log("Skill selected:", selectedSkill);
        updateSummary("Skill", selectedSkill.name);
        const skillSelectionSection = document.getElementById("skill-selection");
        const itemSelectionSection = document.getElementById("item-selection");
        skillSelectionSection.style.display = "none";
        itemSelectionSection.style.display = "block";
        fetchUniqueItems(selectedClass, "helm", populateUniqueItems);
    });

    skillBackButton.addEventListener("click", () => {
        const skillSelectionSection = document.getElementById("skill-selection");
        const classSelectionSection = document.getElementById("class-selection");
        skillSelectionSection.style.display = "none";
        classSelectionSection.style.display = "block";
        const classConfirmButton = document.getElementById("class-confirm");
        classConfirmButton.style.display = "none";
    });

    itemConfirmButton.addEventListener("click", () => {
        if (!selectedItem) {
            alert("Please select an item.");
            return;
        }
        console.log("Item selected:", selectedItem);
        const itemSelectionSection = document.getElementById("item-selection");
        itemSelectionSection.style.display = "none";
        if (selectedItem.name === "Custom Helmet") {
            fetchAffixes(selectedClass, "helm", populateAffixSelection); // Ensure 'helm' is passed as gearType
            navigateToSection("Affixes");
        } else if (selectedItem.name === "Custom Chest") {
            fetchAffixes(selectedClass, "chest", populateAffixSelection); // Ensure 'chest' is passed as gearType
            navigateToSection("Affixes");
        } else if (selectedItem.name === "Custom Pant") { // New Item Type
            fetchAffixes(selectedClass, "pant", populateAffixSelection); // Ensure 'pant' is passed as gearType
            navigateToSection("Affixes");
        } else {
            const itemDetailsSection = document.getElementById("item-details");
            itemDetailsSection.style.display = "block";
            displaySelectedItemDetails(selectedItem);
        }
    });

    itemBackButton.addEventListener("click", () => {
        const itemSelectionSection = document.getElementById("item-selection");
        const skillSelectionSection = document.getElementById("skill-selection");
        itemSelectionSection.style.display = "none";
        skillSelectionSection.style.display = "block";
    });

    itemDetailsBackButton.addEventListener("click", () => {
        const itemDetailsSection = document.getElementById("item-details");
        const itemSelectionSection = document.getElementById("item-selection");
        itemDetailsSection.style.display = "none";
        itemSelectionSection.style.display = "block";
    });

    itemDetailsConfirmButton.addEventListener("click", () => {
        console.log("Item details confirm button clicked");
        const inputs = document.querySelectorAll(".attribute-input");
        const selectedValues = Array.from(inputs).map((input, index) => {
            const attribute = selectedItem.attributes[index];
            const value = input.value;
            return `${attribute}: ${value}`;
        });

        console.log("Selected input values:", selectedValues);

        // Get all attributes, including those without inputs
        const allAttributes = selectedItem.attributes.map((attribute, index) => {
            const inputId = `#attribute-${index}`;
            const input = document.querySelector(inputId);
            const value = input ? input.value : "N/A";
            return `${attribute}: ${value}`;
        });

        console.log("All attributes:", allAttributes);
        updateSummary("Item", selectedItem.name, allAttributes);
        console.log("Class:", selectedClass);
        console.log("Skill:", selectedSkill);
        console.log("Item:", selectedItem);
        console.log("Selected Item Values:", selectedValues);
    });

    affixConfirmButton.addEventListener("click", () => {
        console.log("Affix confirm button clicked");
        const affixInputs = document.querySelectorAll(".affix-input:checked");
        if (affixInputs.length !== 3) {
            alert("Please select exactly 3 affixes.");
            return;
        }
        selectedAffixes = Array.from(affixInputs).map((input) => input.value);
        console.log("Selected affixes:", selectedAffixes);

        // Create a custom pant item with the selected affixes
        selectedItem = {
            name: "Custom Pant",
            type: "Legendary Pant",
            attributes: selectedAffixes,
            effect: "",
            lore: "A pant customized to the wearer's needs.",
            image: "/assets/uniques/pants/custom_pants.webp",
        };

        // Update the summary with only the pant details, excluding affixes
        updateSummary("Pant", selectedItem.name, selectedAffixes);

        const affixSelectionSection = document.getElementById("affix-selection");
        const itemDetailsSection = document.getElementById("item-details");
        affixSelectionSection.style.display = "none";
        itemDetailsSection.style.display = "block";
        displaySelectedItemDetails(selectedItem);
    });

    affixBackButton.addEventListener("click", () => {
        const affixSelectionSection = document.getElementById("affix-selection");
        const itemSelectionSection = document.getElementById("item-selection");
        affixSelectionSection.style.display = "none";
        itemSelectionSection.style.display = "block";
    });

    initClassSelection((className) => {
        if (className !== selectedClass) {
            selectedClass = className;
            const classConfirmButton = document.getElementById("class-confirm");
            classConfirmButton.style.display = "block";
            resetSummary();
        } else {
            console.log(`Class ${className} is already selected.`);
        }
        updateSummary("Class", selectedClass); // Update summary upon class selection
        fetchSkills(className, populateSkillDropdowns, displaySkillDetails, addSkillSelectionListeners);
        // Do not navigate to the next section here
    }, selectedClass);

    function displaySelectedItemDetails(item) {
        console.log("Displaying selected item details:", item);
        const itemImageContainer = document.getElementById("item-image-container");
        const itemInfoContainer = document.getElementById("item-info-container");

        itemImageContainer.innerHTML = `<img src="${item.image}" alt="${item.name}">`;

        itemInfoContainer.innerHTML = `
            <h3>${item.name}</h3>
            <p><strong>Type:</strong> ${item.type}</p>
            ${item.attributes
                .map(
                    (attribute, index) => `
                <div class="input-container">
                    <p><strong>${attribute}:</strong></p>
                    <input type="number" class="attribute-input" id="attribute-${index}">
                </div>
            `
                )
                .join("")}
            <p><strong>Effect:</strong> ${item.effect}</p>
            <p><strong>Lore:</strong> ${item.lore}</p>
        `;
    }

    loadBuilds();

    window.loadBuild = loadBuild; // Ensure these functions are accessible globally
    window.deleteBuild = deleteBuild;

    document
        .getElementById("save-build-button")
        .addEventListener("click", () => saveBuild(selectedClass, selectedSkill, selectedItem, summaryContent));
    document
        .getElementById("profile-button")
        .addEventListener("click", () => navigateToSection("Profile"));
    profileBackButton.addEventListener("click", () => navigateToSection("summary-box"));
    homeButton.addEventListener("click", () => navigateToSection("Information"));

    selectClassButton.addEventListener("click", () => navigateToSection("Class"));
    selectSkillButton.addEventListener("click", () => navigateToSection("Skill"));
    selectHelmetButton.addEventListener("click", () => navigateToSection("Helmet"));
    selectChestButton.addEventListener("click", () => navigateToSection("Chest"));
    selectPantButton.addEventListener("click", () => navigateToSection("Pant")); // New Button Event Listener

    // Initially show the information section
    navigateToSection("Information");
});

export { navigateToSection };





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\navigation.js
// public/js/navigation.js

// public/js/navigation.js
export function navigateToSection(type, fetchUniqueItems, selectedClass) {
    console.log(`Navigating to section: ${type}`);
    hideAllSections();

    switch (type) {
        case "Information":
            showSection("information");
            break;
        case "Class":
            showSection("class-selection");
            break;
        case "Skill":
            showSection("skill-selection");
            break;
        case "Helmet":
            showSection("item-selection");
            fetchUniqueItems(selectedClass, "helm", populateUniqueItems);
            break;
        case "Chest":
            showSection("item-selection");
            fetchUniqueItems(selectedClass, "chest", populateUniqueItems);
            break;
        case "Pant":
            showSection("item-selection");
            fetchUniqueItems(selectedClass, "pant", populateUniqueItems); // New case for Pant
            break;
        case "Helmet Details":
            showSection("item-details");
            break;
        case "Profile":
            showSection("profile-page");
            break;
        case "Affixes":
            showSection("affix-selection");
            break;
        default:
            console.error(`Unknown section: ${type}`);
    }
}

function hideAllSections() {
    document.querySelectorAll('.section').forEach(section => {
        section.style.display = 'none';
    });
}

function showSection(sectionId) {
    document.getElementById(sectionId).style.display = 'block';
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\skillDetails.js
// public/js/skillDetails.js

export function displaySkillDetails(skills, skillClass) {
  console.log('Displaying skills:', skills);
  console.log('Selected class:', skillClass);

  const skillsContainer = document.getElementById('skills-container');

  const classDirectoryMap = {
    Barbarian: 'barbarian',
    Necromancer: 'necromancer',
    // Add other class mappings as needed
  };

  const classDirectory = classDirectoryMap[skillClass] || skillClass.toLowerCase();

  skillsContainer.innerHTML = skills.map(skill => `
    <div class="skill">
      <img src="/assets/${classDirectory}/${skill.icon}" alt="${skill.name}" class="skill-icon">
      <div class="skill-details">
        <h3>${skill.name}</h3>
        <p>Damage Multiplier: ${skill.damageMultiplier}</p>
        <p>Tags: ${skill.tags.join(', ')}</p>
      </div>
    </div>
  `).join('');
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\skillSelection.js
// public/js/skillSelection.js

export function initSkillSelection(selectSkillCallback) {
  const skillsContainer = document.getElementById('skills-container');

  function populateSkillDropdowns(skills) {
    console.log('Populating skill dropdowns with skills:', skills);
    skillsContainer.innerHTML = ''; // Clear previous content

    skills.forEach(skill => {
      const skillCard = document.createElement('div');
      skillCard.className = 'skill-card';
      skillCard.innerHTML = `
        <h3>${skill.name}</h3>
        <p>Damage Multiplier: ${skill.damageMultiplier}</p>
        <p>Tags: ${skill.tags.join(', ')}</p>
      `;
      skillCard.addEventListener('click', function() {
        document.querySelectorAll('.skill-card').forEach(card => card.classList.remove('selected'));
        skillCard.classList.add('selected');
        console.log(`Selected skill:`, skill);
        selectSkillCallback(skill); // Pass selected skill back to main.js
        updateSummary("Skill", skill.name);
      });

      skillsContainer.appendChild(skillCard);
    });
  }

  return { populateSkillDropdowns };
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\summary.js
// public/js/summary.js
export function updateSummary(type, value, details = null) {
  const summaryContent = document.getElementById("summary-content");
  console.log(
      `Updating summary: type=${type}, value=${value}, details=${details}`
  );
  const existingSummaryItem = document.querySelector(
      `#summary-content li[data-type="${type}"]`
  );
  if (existingSummaryItem) {
      existingSummaryItem.innerHTML = `<strong>${type}:</strong> ${value}`;
      if (details) {
          const detailsList = document.createElement("ul");
          details.forEach((detail) => {
              const detailItem = document.createElement("li");
              detailItem.textContent = detail;
              detailsList.appendChild(detailItem);
          });
          existingSummaryItem.appendChild(detailsList);
      }
  } else {
      const summaryItem = document.createElement("li");
      summaryItem.setAttribute("data-type", type);
      summaryItem.innerHTML = `<strong>${type}:</strong> ${value}`;
      summaryItem.classList.add("clickable-summary-item"); // Add class for clickable styling
      if (details) {
          const detailsList = document.createElement("ul");
          details.forEach((detail) => {
              const detailItem = document.createElement("li");
              detailItem.textContent = detail;
              detailsList.appendChild(detailItem);
          });
          summaryItem.appendChild(detailsList);
      }
      summaryContent.appendChild(summaryItem);

      // Add event listener for navigation
      summaryItem.addEventListener("click", () => navigateToSection(type, fetchUniqueItems, selectedClass));
  }
}

export function resetSummary() {
  const summaryContent = document.getElementById("summary-content");
  console.log("Resetting summary");
  summaryContent.innerHTML = "";
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\public\js\uniqueItemSelection.js
// public/js/uniqueItemSelection.js

export function initUniqueItemSelection(onItemSelected) {
  function populateUniqueItems(items) {
      const itemsContainer = document.getElementById('items-container');
      console.log('Populating unique items with items:', items);
      itemsContainer.innerHTML = ''; // Clear previous items

      items.forEach(item => {
          const itemCard = document.createElement('div');
          itemCard.className = 'item-card';
          itemCard.innerHTML = `
              <img src="${item.image}" alt="${item.name}">
              <h3>${item.name}</h3>
              <p>${item.type}</p>
          `;
          itemCard.addEventListener('click', () => {
              document.querySelectorAll('.item-card').forEach(card => card.classList.remove('selected'));
              itemCard.classList.add('selected');
              onItemSelected(item);
          });

          itemsContainer.appendChild(itemCard);
      });
  }

  return { populateUniqueItems };
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\server.ts
// src/server.ts
import express from 'express';
import path from 'path';
import fs from 'fs';
import Store from './store';

const app = express();
const port = 3000;
const store = new Store();

// Serve static files from the "public" directory
app.use(express.static(path.join(__dirname, '../public')));
console.log('Serving static files from the public directory');

// Serve class icons from the "src/assets/classes" directory
app.use('/assets/classes', express.static(path.join(__dirname, '../src/assets/classes')));
console.log('Serving class icons from the assets/classes directory');

// Serve skill icons from the "src/assets/barbarian" directory
app.use('/assets/barbarian', express.static(path.join(__dirname, '../src/assets/barbarian')));
console.log('Serving barbarian icons from the assets/barbarian directory');

// Serve skill icons from the "src/assets/necromancer" directory
app.use('/assets/necromancer', express.static(path.join(__dirname, '../src/assets/necromancer')));
console.log('Serving necro icons from the assets/necromancer directory');

// Serve skill icons from the "src/assets/druid" directory
app.use('/assets/druid', express.static(path.join(__dirname, '../src/assets/druid')));
console.log('Serving druid icons from the assets/druid directory');

// Serve skill icons from the "src/assets/rogue" directory
app.use('/assets/rogue', express.static(path.join(__dirname, '../src/assets/rogue')));
console.log('Serving rogue icons from the assets/rogue directory');

// Serve skill icons from the "src/assets/sorceress" directory
app.use('/assets/sorceress', express.static(path.join(__dirname, '../src/assets/sorceress')));
console.log('Serving sorceress icons from the assets/sorceress directory');

// Serve unique helm icons from the "src/assets/uniques/helmets" directory
app.use('/assets/uniques/helmets', express.static(path.join(__dirname, '../src/assets/uniques/helmets')));
console.log('Serving unique helm icons from the assets/uniques/helmets directory');

// Serve unique chest icons from the "src/assets/uniques/chests" directory
app.use('/assets/uniques/chests', express.static(path.join(__dirname, '../src/assets/uniques/chests')));
console.log('Serving unique chest icons from the assets/uniques/chests directory');

// Serve unique pant icons from the "src/assets/uniques/pants" directory
app.use('/assets/uniques/pants', express.static(path.join(__dirname, '../src/assets/uniques/pants'))); // New Route
console.log('Serving unique pant icons from the assets/uniques/pants directory');

// Serve background images from the "src/assets" directory
app.use('/assets', express.static(path.join(__dirname, '../src/assets')));

// Serve the main page
app.get('/', (req, res) => {
    console.log('Received request for /');
    res.sendFile(path.join(__dirname, '../public', 'index.html'));
    console.log('Sent index.html');
});

// API endpoint to get items by class
app.get('/api/items/:class', (req, res) => {
    const itemClass = req.params.class;
    console.log(`Request received for class: ${itemClass}`);
    const items = store.getItemsByClass(itemClass) as any[];
    if (items && items.length > 0) {
        console.log(`Number of items found for class ${itemClass}: ${items.length}`);
        res.json(items);
    } else {
        console.error(`No items found for class ${itemClass}`);
        res.status(404).json({ error: `No items found for class ${itemClass}` });
    }
});

// API endpoint to get skills by class
app.get('/api/skills/:class', (req, res) => {
    const skillClass = req.params.class;
    console.log(`Request received for skills of class: ${skillClass}`);
    const skillsPath = path.join(__dirname, `../src/data/${skillClass.toLowerCase()}/${skillClass.toLowerCase()}_skills.json`);
    try {
        const data = fs.readFileSync(skillsPath, 'utf8');
        const skills = JSON.parse(data);
        console.log(`Number of skills found for class ${skillClass}: ${skills.length}`);
        res.json(skills);
    } catch (error) {
        console.error(`Error reading skills file for class ${skillClass}:`, error);
        res.status(500).json({ error: 'Failed to load skills' });
    }
});

// Serve unique items
app.get('/api/unique-items', (req, res) => {
    const uniqueItemsPath = path.join(__dirname, '../src/data/unique_items.json');
    fs.readFile(uniqueItemsPath, 'utf8', (err, data) => {
        if (err) {
            res.status(500).send('Error reading unique items file');
            return;
        }
        res.json(JSON.parse(data));
    });
});

// Serve affixes based on class and gear type
app.get('/api/affixes/:class/:gearType', (req, res) => {
    const { class: className, gearType } = req.params;
    const filePath = path.join(__dirname, '../src/data', className.toLowerCase(), `${className.toLowerCase()}_gear_affixes.json`);

    if (fs.existsSync(filePath)) {
        const data = fs.readFileSync(filePath, 'utf8');
        const affixes = JSON.parse(data);

        // Check if the gearType exists in the affixes data
        if (affixes[gearType]) {
            res.json(affixes[gearType]);
        } else {
            res.status(404).send(`No affixes found for ${gearType} of class ${className}`);
        }
    } else {
        res.status(404).send('Affixes file not found');
    }
});
app.listen(port, () => {
    console.log(`Server is running at http://localhost:${port}`);
});





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\store.ts
// src/store.ts
import fs from 'fs';
import path from 'path';

class Store {
    private dataDir: string;

    constructor() {
        this.dataDir = path.join(__dirname, '../src/data');
    }

    public getItemsByClass(itemClass: string): any[] {
        const filePath = path.join(this.dataDir, `${itemClass.toLowerCase()}_items.json`);
        console.log(`Fetching items from: ${filePath}`);
        try {
            const data = fs.readFileSync(filePath, 'utf8');
            const items = JSON.parse(data);
            return Array.isArray(items) ? items : [];
        } catch (error) {
            console.error(`Error reading file for class ${itemClass}:`, error);
            return [];
        }
    }

    public getSkillsByClass(skillClass: string): any[] {
        const filePath = path.join(this.dataDir, `${skillClass.toLowerCase()}_skills.json`);
        console.log(`Fetching skills from: ${filePath}`);
        try {
            const data = fs.readFileSync(filePath, 'utf8');
            const skills = JSON.parse(data);
            return Array.isArray(skills) ? skills : [];
        } catch (error) {
            console.error(`Error reading file for class ${skillClass}:`, error);
            return [];
        }
    }
}

export default Store;





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\data\unique_items.json
[
    {
        "name": "Custom Helmet",
        "type": "Legendary Helm",
        "attributes": [],
        "effect": "This is a test item used for max level boosts.",
        "image": "/assets/custom_gear.png"
    },
    {
        "name": "Tuskhelm of Joritz the Mighty",
        "type": "Unique Helm",
        "attributes": [
            "Damage while Berserking is Active",
            "Maximum Fury",
            "Attack Speed",
            "Aggressive Resistance"
        ],
        "effect": "When you gain Berserking while already Berserk, you have a [40 – 60]% chance to become more enraged granting 15% increased damage, 2 Fury per second, and 10% Cooldown Reduction.(Barbarian Only)",
        "lore": "As he fought side by side with Raekor to liberate the labor camp, Joritz claimed this dented helm from a fallen foe. As his legend grew, its unique shape became synonymous with his great deeds.",
        "class": "Barbarian",
        "image": "/assets/uniques/helmets/tuskhelm_of_joritz_the_mighty_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Tempest Roar",
        "type": "Unique Helm",
        "attributes": [
            "Damage while Shapeshifted",
            "Critical Strike Damage",
            "Maximum Spirit",
            "Poison Resistance"
        ],
        "effect": "Lucky Hit: Storm Skills have up to a [15 – 25]% chance to grant 4 Spirit. Your base Storm Skills are now also Werewolf Skills(Druid Only)",
        "lore": "\"Listen, child, to the music of the storm. It has its own rhythm. Its own melody. Hear how beautifully it sings, and perhaps one day you will be able to join in its harmony.\" – Airidah",
        "class": "Druid",
        "image": "/assets/uniques/helmets/tempest_roar_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Vasily's Prayer",
        "type": "Unique Helm",
        "attributes": [
            "Damage while Shapeshifted",
            "Overpower Damage",
            "Maximum Life",
            "Lightning Resistance"
        ],
        "effect": "Your Earth Skills are now also Werebear Skills and Fortify you for .(Druid Only)",
        "lore": "\"Roots from the Great Oak growing at the seaward statue of Vasily will, on rare occasions, be found twisted back upon themselves, suffused with ferocious magic.\" - Barrett's Book of Implements",
        "class": "Druid",
        "image": "/assets/uniques/helmets/vasilys_prayer_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Andariel's Visage",
        "type": "Unique Helm",
        "attributes": [
            "All Stats",
            "Attack Speed",
            "Life Steal",
            "Poison Resistance"
        ],
        "effect": "Lucky Hit: Up to a 20% chance to trigger a poison nova that applies [18500] Poisoning damage over 5 seconds to enemies in the area.",
        "lore": "The horrific whispers of the Maiden of Anguish flicker through your mind, pushing you ever closer to madness...",
        "requiredLevel": 35,
        "image": "/assets/uniques/helmets/andariels_visage_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Harlequin Crest",
        "type": "Unique Helm",
        "attributes": [
            "Maximum Life",
            "Cooldown Reduction",
            "Resource Generation",
            "All Stats"
        ],
        "effect": "Gain 20% Damage Reduction. In addition, gain +4 Ranks to all Skills.",
        "lore": "\"This headdress was once worn by an assassin disguised as a court mage. Her treachery was unveiled, but not before she used its magic to curse the king's entire lineage.\" - The Fall of House Aston",
        "requiredLevel": 35,
        "image": "/assets/uniques/helmets/harlequin_crest_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Godslayer Crown",
        "type": "Unique Helm",
        "attributes": [
            "Cooldown Reduction",
            "Maximum Life",
            "Damage",
            "Crowd Control Duration"
        ],
        "effect": "When you Stun, Freeze, or Immobilize an Elite enemy, or damage a Boss, it Pulls In Nearby enemies. You deal x[30 – 60]% increased damage to them for 3 seconds. This effect can only occur once every 12 seconds.",
        "lore": "\"The Sahptev faithful believe in a thousand and one gods. If it takes me as many lifetimes, I will find and kill them all.\" - Gaspar Stilbian, Veradani Outcast",
        "image": "/assets/uniques/helmets/godslayer_crown_unique_helm_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Deathless Visage",
        "type": "Unique Helm",
        "attributes": [
            "Damage Reduction",
            "Physical Damage",
            "Bone Critical Strike Damage",
            "Maximum Essence"
        ],
        "effect": "Bone Spear leaves behind echoes as it travels that explode, dealing [3700 * (1 + 0) * [0.5 – 0.7]] damage, increased by 5% for every 30% of your Critical Strike Damage Bonus. Current Bonus: [Floor((Owner.(ComputeCritDamageScalar() + (-1)) + Owner.Crit_Damage_Percent) / (30 / 100)) * 5|x%||1|](Necromancer Only)",
        "lore": "\"Rathma is endless. He was the first Ancient, and will remain at the end. He is the master of the Great Cycle of Being. When Death comes for him, why should he fear it?\" - Vauntus, Acolyte of Rathma",
        "class": "Necromancer",
        "image": "/assets/uniques/helmets/deathless_visage_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Cowl of the Nameless",
        "type": "Unique Helm",
        "attributes": [
            "Damage Reduction from Close Enemies",
            "Cooldown Reduction",
            "Crowd Control Duration",
            "Imbuement Skills"
        ],
        "effect": "You gain x[15 – 25]% increased Lucky Hit Chance against Crowd Controlled enemies.(Rogue Only)",
        "lore": "\"He is banished from the Guild, his name stricken from the Book. His punishment is to never have been.\" - Excerpt from a burned parchment",
        "class": "Rogue",
        "image": "/assets/uniques/helmets/cowl_of_the_nameless_unique_helm_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Starfall Coronet",
        "type": "Unique Helm",
        "attributes": [
            "Meteor",
            "Cooldown Reduction",
            "Lucky Hit Chance",
            "Maximum Life"
        ],
        "effect": "Meteor now has 1 additional charge with a [6 – 11] second Charge Cooldown instead of a Mana cost, and drops 3 additional meteors around the target. Meteor's Enchantment Effect and Enhanced Meteor drop 1 additional meteor.(Sorcerer Only)",
        "lore": "\"The elders say they saw a star falling from the sky many years ago. A sign from the heavens that the end times were nigh. A rallying cry to take up arms and protect Sanctuary!\" - Crusader Hamilton",
        "class": "Sorcerer",
        "image": "/assets/uniques/helmets/starfall_coronet_unique_helm_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Custom Chest",
        "type": "Legendary Chest",
        "attributes": [],
        "effect": "This is a test item used for max level boosts.",
        "image": "/assets/custom_gear.png"
    },
    {
        "name": "Rage of Harrogath",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Physical Damage",
            "Critical Strike Chance with Physical Damage Against Elites",
            "Damage Reduction from Enemies That Are Bleeding",
            "Thorns"
        ],
        "effect": "Lucky Hit: Inflicting Bleeding on an enemy has up to a [20 - 40%] chance to reduce the Cooldowns of your Skills by 1 second.",
        "lore": "Harrogath, the final bastion of resistance against Baal's assault on Mt. Arreat was destroyed along with the Worldstone. The survivors never forgave the betrayal that led to the loss of their home.",
        "class": "Barbarian",
        "image": "/assets/uniques/chests/rage_of_harrogath_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Insatiable Fury",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Physical Damage",
            "Overpower Damage",
            "Damage Reduction While Fortified",
            "Total Armor while in Werebear Form"
        ],
        "effect": "Werebear form is now your true form, and you gain +3 Ranks to all Werebear Skills.",
        "lore": "When the Days of Ash began, the great druid Nafain reminded his disciples that nothing, not even the loss of their humanity, was too great a sacrifice to protect Túr Dúlra from Astaroth's flames.",
        "class": "Druid",
        "image": "/assets/uniques/chests/insatiable_fury_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Mad Wolf's Glee",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Maximum Life",
            "Poison Damage",
            "Damage Reduction from Enemies That Are Poisoned",
            "Movement Speed"
        ],
        "effect": "Werewolf form is now your true form, and you gain +3 Ranks to all Werewolf Skills.",
        "lore": "\"He was not a victim of the curse - he sought it out. As his skin split and his bones cracked, his laughter never ceased.\" - Tale of the Mad Nobleman",
        "class": "Druid",
        "image": "/assets/uniques/chests/mad_wolfs_glee_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Blood Artisan's Cuirass",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Damage for 4 Seconds After Picking Up a Blood Orb",
            "Blood Orb Healing",
            "Maximum Life",
            "Ranks of Bone Spirit"
        ],
        "effect": "When you pick up [5 - 10] Blood Orbs, a free Bone Spirit is spawned, dealing bonus damage based on your current Life percent.",
        "lore": "\"The infamous Necromancer Gaza-Thul's mastery over blood magic was indisputable. Many suspect that upon his death, his skin was used to fashion this eldritch armor.\" - Barrett's Book of Implements",
        "class": "Necromancer",
        "image": "/assets/uniques/chests/blood_artisans_cuirass_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Mutilator Plate",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Willpower",
            "Critical Strike Chance",
            "Damage Reduction from Enemies That Are Poisoned",
            "Healing Received"
        ],
        "effect": "When you critically strike, you have a [10 - 20]% chance to gain a shield that absorbs [1000 - 2000] damage for 3 seconds.",
        "lore": "\"Flesh is a canvas. This armor, a masterpiece.\" - Rathma",
        "class": "Necromancer",
        "image": "/assets/uniques/chests/mutilator_plate_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Razorplate",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Thorns",
            "Damage Reduction from Close Enemies",
            "Maximum Life",
            "Damage Reduction While Fortified"
        ],
        "effect": "Gain [1000 - 2000] Thorns.",
        "lore": "\"I cut myself upon its edge. Blood spilled, but I could not bear to part with it.\" - Unknown",
        "class": "Barbarian",
        "image": "/assets/uniques/chests/razorplate_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Raiment of the Infinite",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Mana",
            "Damage Reduction from Close Enemies",
            "Cooldown Reduction",
            "Critical Strike Damage"
        ],
        "effect": "After using Teleport, Close Enemies are Pulled to you and Stunned for [3 - 5] seconds, but Teleport's Cooldown is increased by [10 - 20] seconds.",
        "lore": "\"I looked into the endless void, and it looked back.\" - Unknown",
        "class": "Sorcerer",
        "image": "/assets/uniques/chests/raiment_of_the_infinite_unique_chest_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Scoundrel's Leathers",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Energy",
            "Cooldown Reduction",
            "Damage Reduction from Distant Enemies",
            "Critical Strike Damage"
        ],
        "effect": "You gain +[10 - 20]% increased Critical Strike Chance against enemies affected by your Imbuement Skills.",
        "lore": "\"A thief's greatest asset is his agility. His worst enemy, however, is his own ego.\" - Unknown",
        "class": "Rogue",
        "image": "/assets/uniques/chests/scoundrels_leathers_unique_chest_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Soulbrand",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Health",
            "Energy",
            "Damage Reduction While Dashing",
            "Critical Strike Chance"
        ],
        "effect": "When you critically strike an enemy, you have a [10 - 20]% chance to gain a shield that absorbs [1000 - 2000] damage for 5 seconds.",
        "lore": "\"My blade is my soul, and my soul is my blade.\" - Unknown",
        "class": "Rogue",
        "image": "/assets/uniques/chests/soulbrand_unique_chest_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Tyrael's Might",
        "type": "Unique Chest Armor",
        "itemPower": 925,
        "armor": 1618,
        "attributes": [
            "Holy Damage",
            "Damage Reduction from Demons",
            "Health",
            "Movement Speed"
        ],
        "effect": "Gain +[1 - 3] Ranks to all Holy Skills.",
        "lore": "\"In the name of the Light, I will strike down the evils of this world.\" - Tyrael",
        "class": "Paladin",
        "image": "/assets/uniques/chests/tyraels_might_unique_chest_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Custom Pants",
        "type": "Legendary Pants",
        "attributes": [],
        "effect": "This is a test item used for max level boosts.",
        "image": "/assets/custom_gear.png"
    },
    {
        "name": "Arreat's Bearing",
        "type": "Unique Pants",
        "attributes": [
            "Maximum Life",
            "Ultimate Cooldown Reduction",
            "Strength",
            "Damage Reduction"
        ],
        "effect": "Ancients you summon are empowered. Korlic creates an Earthquake that deals [X] Physical damage over 4 seconds when he leaps. Talic leaves behind Dust Devils that deal [X] damage while he whirlwinds. Mawdac ignites the ground Burning enemies for an additional [X] damage over 4 seconds when he upheaves the ground.",
        "lore": "\"Rise clansmen and reclaim our trampled honor! Ancients' blood runs through us all! We are storms - earth breaking, maelstrom wielding. The fire of the gods burn still! They are with us!\" - Ealda",
        "class": "Barbarian",
        "image": "/assets/uniques/pants/arreats_bearing_unique_pant_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Storm's Companion",
        "type": "Unique Pants",
        "attributes": [
            "Maximum Life",
            "Damage Reduction",
            "Companion Movement Speed",
            "Ranks of Wolves"
        ],
        "effect": "Your Wolf Companions are infused with the power of the storm, dealing Lightning damage and gaining the Storm Howl ability.",
        "lore": "\"The storm's rage is my own, brother. I call, and the skies roar in reply.\" - Vasily, to Bul-Kathos",
        "class": "Druid",
        "image": "/assets/uniques/pants/storms_companion_unique_pant_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Blood Moon Breeches",
        "type": "Unique Pants",
        "attributes": [
            "Maximum Life",
            "Ranks of All Curse Skills",
            "Ranks of the Amplify Damage Passive",
            "Damage Reduction from Enemies Affected by Curse Skills"
        ],
        "effect": "Your Minions have a [3 - 7%] chance to curse enemies. Enemies affected by at least 1 of your curses take x70% increased Overpower damage from you.",
        "lore": "A naturally occurring curiosity, the blood moon persists as a sign of woe for the most superstitious Zakarum faithful. Children born under it are often considered cursed and cast out, lest it spread.",
        "class": "Necromancer",
        "image": "/assets/uniques/pants/blood_moon_breeches_unique_pant_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Eyes in the Dark",
        "type": "Unique Pants",
        "attributes": [
            "Damage Reduction",
            "Shadow Damage",
            "Maximum Life",
            "Damage to Enemies Affected by Trap Skills"
        ],
        "effect": "Unless it hits a Boss or Player, Death Trap will continue to re-arm itself until it kills an enemy. Death Trap's is increased by [50 - 70%] , however the Cooldown is increased by [20 - 15%] .",
        "lore": "\"And so, when the sun dipped behind the hills each night, he knew that Ashen Jack would soon be near. Watching, and waiting.\" - Greenslade's Tales, Chapter 2: \"Each Long Night\"",
        "class": "Rogue",
        "image": "/assets/uniques/pants/eyes_in_the_dark_unique_pant_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Iceheart Brais",
        "type": "Unique Pants",
        "attributes": [
            "Maximum Life",
            "Damage to Frozen Enemies",
            "Damage Reduction",
            "Freeze Duration"
        ],
        "effect": "Enemies that die while Frozen, have a [21 - 30%] chance to unleash a Frost Nova.",
        "lore": "The mad artisan saw his fingers turn black from frostbite as he worked the cloth, but refused to stay the needle and thread for even a moment.",
        "class": "Sorcerer",
        "image": "/assets/uniques/pants/iceheart_brais_unique_pant_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Tassets of the Dawning Sky",
        "type": "Unique Pants",
        "attributes": [
            "Control Impaired Duration Reduction",
            "Maximum Life",
            "All Stats",
            "Resistance to All Elements"
        ],
        "effect": "When you take damage from a Non-Physical damage type, you gain + [8 - 12%] Maximum Resistance to that damage type for 6 seconds. This effect can only apply to one damage type at a time.",
        "lore": "“May the Light of Father Inarius shine down upon all weary travelers of this holy land. Turn your face toward his radiance and find your strength renewed.” - Statue Inscription",
        "image": "/assets/uniques/pants/tassets_of_the_dawning_sky_unique_pant_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Temerity",
        "type": "Unique Pants",
        "attributes": [
            "Maximum Life",
            "Potion Drop Rate",
            "Lucky Hit: Up to a 5% Chance to Heal [X] Life",
            "Healing Received"
        ],
        "effect": "Effects that Heal you beyond 100% Life grant you a Barrier up to [40 - 80%] of your Maximum Life that lasts for 8 seconds.",
        "lore": "\"The revelation that master tailor Callas was in fact a witch only served to further fuel the desire for her uniquely enchanted legwraps.\" - Barrett's Book of Implements",
        "image": "/assets/uniques/pants/temerity_unique_pant_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Tibault's Will",
        "type": "Unique Pants",
        "attributes": [
            "Damage Reduction from Close Enemies",
            "Potion Capacity",
            "Damage",
            "Maximum Resource"
        ],
        "effect": "You deal [10 - 20%] increased damage while Unstoppable and for 5 seconds after. When you become Unstoppable, gain 50 of your Primary Resource.",
        "lore": "\"The younger apprentices think wearing heavy plate in the swamps is foolish. They fail to understand that our armor is our legacy, and without it we are nothing.\" - Crusader Pembroke",
        "image": "/assets/uniques/pants/tibaults_will_unique_pant_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Custom Gloves",
        "type": "Legendary Gloves",
        "attributes": [],
        "effect": "This is a test item used for max level boosts.",
        "image": "/assets/custom_gear.png"
    },
    {
        "name": "Gohr's Devastating Grips",
        "type": "Unique Gloves",
        "attributes": [
            "Critical Strike Chance Against Close Enemies",
            "Lucky Hit Chance",
            "Damage",
            "Ranks of Whirlwind"
        ],
        "effect": "Whirlwind explodes every 2 seconds and after it ends, dealing [25 - 35%] of the total Base damage dealt to surrounding enemies as Fire damage.",
        "lore": "\"The brutish construction of these gloves belies the strength they bestow. Gohr was clearly no craftsman, but it would be foolish to ignore the triumph of his work.\" - Barrett's Book of Implements",
        "class": "Barbarian",
        "image": "/assets/uniques/gloves/gohrs_devastating_grips_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Twin Strikes",
        "type": "Unique Gloves",
        "attributes": [
            "Attack Speed",
            "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
            "Damage",
            "Ranks to Double Swing"
        ],
        "effect": "After casting Double Swing 4 times, your next Double Swing will hit 2 additional times, each dealing [10 - 25%] increased damage.",
        "lore": "\"When hitting it once doesn't kill it, hit it twice.\" - Bear Tribe Proverb",
        "class": "Barbarian",
        "image": "/assets/uniques/gloves/twin_strikes_unique_gloves_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Unsung Ascetic's Wraps",
        "type": "Unique Gloves",
        "attributes": [
            "Lucky Hit Chance",
            "Ranks of Lightning Storm",
            "Critical Strike Chance",
            "Ranks of the Defiance Passive"
        ],
        "effect": "Lightning Storm gains 1 additional strike each times it grows. Lightning Storm Critical Strikes cause lightning to strike twice, dealing [10 - 20%] increased damage.",
        "lore": "\"The storm caller returns, day after day, demanding to meet the Tree. He beats his chest and demonstrates his powers, refusing to believe that he will never be chosen.\" - Excerpt from Gulyas' Diary",
        "class": "Druid",
        "image": "/assets/uniques/gloves/unsung_ascetics_wraps_unique_gloves_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Cruor's Embrace",
        "type": "Unique Gloves",
        "attributes": [
            "Overpower Damage",
            "Core Damage",
            "Lucky Hit: Up to a 5% Chance to Heal Life",
            "Ranks to Blood Surge"
        ],
        "effect": "Blood Surge consumes Corpses to cause mini novas, dealing [X] damage. Damage is increased by 10% per target drained by the initial cast, up to 50%. Damage is also increased by 20% for each Corpse consumed.",
        "lore": "In the blood dancer's grasp, a victim lies, A vessel dried 'neath darkened skies. Their life extinguished, veins burst and drained, In Cruor's embrace, forever enchained.",
        "class": "Necromancer",
        "image": "/assets/uniques/gloves/cruors_embrace_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Howl from Below",
        "type": "Unique Gloves",
        "attributes": [
            "Lucky Hit Chance",
            "Corpse Skill Attack Speed",
            "Lucky Hit: Up to a [X]% Chance to Stun",
            "Lucky Hit: Up to a [X]% Chance to Fear"
        ],
        "effect": "Instead of detonating immediately, Corpse Explosion summons a Volatile Skeleton that charges at a random enemy and explodes. Corpse Explosion's damage is increased by [30 - 40%] .",
        "lore": "\"Can you not hear it? That endless scream from the cold earth beneath your feet!? They are down there, trapped, blind with rage! Waiting to drag us down into the sod!\" - Ravings of Madman Gustav",
        "class": "Necromancer",
        "image": "/assets/uniques/gloves/howl_from_below_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Grasp of Shadow",
        "type": "Unique Gloves",
        "attributes": [
            "Attack Speed",
            "Dexterity",
            "Shadow Clone Damage",
            "Ranks of All Core Skills"
        ],
        "effect": "Lucky Hit: Damaging a Vulnerable enemy with a Marskman or Cutthroat Skill has up to a [24 - 34%] chance to summon a Shadow Clone that mimics your attack.",
        "lore": "Dark wisps creep hungrily across these gloves, like an assassin's blade seeking a life to steal on a moonless night.",
        "class": "Rogue",
        "image": "/assets/uniques/gloves/grasp_of_shadow_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Flameweaver",
        "type": "Unique Gloves",
        "attributes": [
            "Attack Speed",
            "Damage to Burning Enemies",
            "Ranks to Fire Bolt",
            "Ranks to Devouring Blaze"
        ],
        "effect": "Casting Fire Bolt through your Firewall causes it to split into 3 bolts, each dealing [30 - 70%] more damage.",
        "lore": "",
        "class": "Sorcerer",
        "image": "/assets/uniques/gloves/flameweaver_unique_gloves_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "Gloves of the Illuminator",
        "type": "Unique Gloves",
        "attributes": [
            "Critical Strike Chance",
            "Fireball Attack Speed",
            "Lucky Hit: Up to a 55% Chance to Restore [X]% Primary Resource",
            "Ranks of Fireball"
        ],
        "effect": "Fireball now bounces as it travels, exploding each time it hits the ground, but it's explosion deals [35 - 25%] less damage.",
        "lore": "After Inarius returned to Sanctuary, he sought a way back to the High Heavens. His first step was to reignite the religion he had abandoned millennia before: the Cathedral of Light.",
        "class": "Sorcerer",
        "image": "/assets/uniques/gloves/gloves_of_the_illuminator_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Fists of Fate",
        "type": "Unique Gloves",
        "attributes": [
            "Lucky Hit: Up to a 10% Chance to Gain [X]% Damage for 4 Seconds",
            "Lucky Hit: Up to a 5% Chance to Restore [X]% Primary Resource",
            "Lucky Hit: Up to a [X]% Chance to Immobilize",
            "Lucky Hit: Up to a [X]% Chance to Daze"
        ],
        "effect": "Your attacks randomly deal 1% to [200 - 300%] of their normal damage.",
        "lore": "\"Will you let fear cheat you, or will you risk everything to find understanding? After all, death is simply the coin with which we purchase life.\" - Zurke",
        "class": "",
        "image": "/assets/uniques/gloves/fists_of_fate_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Frostburn",
        "type": "Unique Gloves",
        "attributes": [
            "Critical Strike Chance",
            "Attack Speed",
            "Freeze Duration",
            "Lucky Hit: Up to a 5% Chance to Restore [X]% Primary Resource"
        ],
        "effect": "Lucky Hit: Up to a [15 - 25%] chance to Freeze enemies for 2 seconds.",
        "lore": "A touch so frigid it stops the heart and chills the very soul.",
        "class": "",
        "image": "/assets/uniques/gloves/frostburn_unique_gloves_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Paingorger's Gauntlets",
        "type": "Unique Gloves",
        "attributes": [
            "Basic Skill Damage",
            "Attack Speed",
            "All Stats",
            "Critical Strike Chance"
        ],
        "effect": "Damaging enemies with a cast Non-Basic Skill marks them for 3 seconds. When a Basic Skill first hits a marked enemy, the Basic Skill's damage is echoed to all marked enemies, dealing [100 - 200%] increased damage.",
        "lore": "Crafted from fragments of Duriel's carapace, wearing these gloves, or being struck by them, causes an agonizing sensation akin to pushing one's hands through a thousand shards of glass.",
        "class": "",
        "image": "/assets/uniques/gloves/paingorgers_gauntlets_unique_gloves_diablo4_wiki_guide_122x182px.png"
    },
    {
        "name": "100,000 Steps",
        "type": "Unique Boots",
        "attributes": [
            "Dexterity",
            "Damage with Skills that Swap to New Weapons",
            "Movement Speed",
            "Ranks of Ground Stomp"
        ],
        "effect": "After gaining the final damage bonus from the Walking Arsenal Key Passive, you automatically cast Ground Stomp and gain [32 - 50] Fury. This cannot happen more than once every 15 seconds.",
        "lore": "\"While many Barbarians remained in the Dreadlands, small groups from the Oxen, Crane and Bear tribes instead chose to search the land for a new home.\" - A History of the Children of Bul-Kathos",
        "class": "Barbarian",
        "image": "/assets/uniques/boots/100000_steps_unique_boots_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Wildheart Hunger",
        "type": "Unique Boots",
        "attributes": [
            "Overpower Damage",
            "Damage Reduction",
            "Critical Strike Damage",
            "Movement Speed"
        ],
        "effect": "When you Shapeshift into a Werewolf or a Werebear, you gain Wildheart for 5 seconds. Wildheart grants you [1 - 1.5%] increased damage with Shapeshifting Skills every 2 seconds, stacking 20 times.",
        "lore": "",
        "class": "Druid",
        "image": "/assets/uniques/boots/wildheart_hunger_unique_boots_diablo4_wiki_guide_122px.png"
    },
    {
        "name": "Greaves of the Empty Tomb",
        "type": "Unique Boots",
        "attributes": [
            "Movement Speed",
            "Essence Cost Reduction",
            "Lucky Hit Chance with Shadow Damage",
            "Damage Reduction from Enemies That Are Affected By Shadow Damage Over Time"
        ],
        "effect": "Create desecrated ground beneath your Sever spectres as they travel, damaging enemies for [X] Shadow damage over 2 seconds.",
        "lore": "\"The massive door to my family's crypt, which had taken a dozen men to close, was thrown open. Had I known the horrors to come I never would have set foot inside!\" -The Ebon Pages, Canto I, Verse VII",
        "class": "Necromancer",
        "image": "/assets/uniques/boots/greaves_of_the_empty_tomb_unique_boots_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Beastfall Boots",
        "type": "Unique Boots",
        "attributes": [
            "Maximum Energy",
            "Damage Reduction",
            "Cooldown Reduction",
            "Movement Speed"
        ],
        "effect": "When you cast an Ultimate Skill, your next Core Skill consumes all of your energy and deals [0.25 - 0.75%] increased damage per Energy consumed. Using a Cooldown restores 15 Energy.",
        "lore": "\"Genai grew proud and fond of boasting of her hunting prowess. She claimed she was fast enough to catch even the spirit Leraye, who cursed her for such an insult.\" - Fable of Genai's Twenty Trials",
        "class": "Rogue",
        "image": "/assets/uniques/boots/beastfall_boots_unique_boots_diablo4_wiki_guide_122px.png"
    },
    {
        "name": "Esu's Heirloom",
        "type": "Unique Boots",
        "attributes": [
            "Movement Speed",
            "Movement Speed for 4 Seconds After Killing an Elite",
            "Mana Cost Reduction",
            "Critical Strike Damage"
        ],
        "effect": "Your Critical Strike Chance is increased by [20 - 30%] of your Movement Speed bonus.",
        "lore": "\"While scholars have proven these boots were not created by Esu herself, it is noteworthy that they have been passed down since the formation of the Mage Clans.\" - Barrett's Book of Implements",
        "class": "Sorcerer",
        "image": "/assets/uniques/boots/esus_heirloom_unique_boots_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Flickerstep",
        "type": "Unique Boots",
        "attributes": [
            "All Stats",
            "Movement Speed",
            "Ultimate Skill Damage",
            "Damage Reduction from Close Enemies"
        ],
        "effect": "Each enemy you Evade through reduces your active Ultimate Cooldown by [2.0 - 4.0] seconds, up to 10 seconds.",
        "lore": "\"Considered a failure by their creator, it wasn't until the assassination of an \"untouchable\" Caldeum noble that these boots' true power was understood.\" - Barrett's Book of Implements",
        "class": "",
        "image": "/assets/uniques/boots/flickerstep_unique_boots_diablo4_wiki_guide_122px.png"
    },
    {
        "name": "Penitent Greaves",
        "type": "Unique Boots",
        "attributes": [
            "Movement Speed",
            "Crowd Control Duration",
            "Slow Duration Reduction",
            "Cold Resistance"
        ],
        "effect": "You leave behind a trail of frost that Chills enemies. You deal [12 - 15%] more damage to Chilled enemies.",
        "lore": "Remorseful devotees of the Cathedral of Light must undertake a grueling pilgrimage, journeying across the frigid glacier known as the Serac Rapture. Only then may their gravest sins be forgiven.",
        "class": "",
        "image": "/assets/uniques/boots/penitent_greaves_unique_boots_diablo4_wiki_guide_122x182px.webp"
    },
    {
        "name": "Yen's Blessing",
        "type": "Unique Boots",
        "attributes": [
            "Damage Reduction from Close Enemies",
            "Movement Speed",
            "Vulnerable Damage",
            "Lucky Hit: Up to a 5% Chance to Restore Primary Resource"
        ],
        "effect": "Casting a Skill has a [40 - 60%] chance to cast a Non-Mobility, Non-Ultimate Skill that is currently on Cooldown. This effect can only occur once every 8 seconds.",
        "lore": "These greaves are imbued with the divine blessing of Yen, the Veradani goddess of restoration. They bestow the wearer a revitalizing strength that enhances their own.",
        "class": "",
        "image": "/assets/uniques/boots/yens_blessing_boots_unique_boots_diablo4_wiki_guide_122px.png"
    }
]





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\data\barbarian\barbarian_gear_affixes.json
{
  "helm": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Maximum Resource",
          "Thorns",
          "Healing Received",
          "Lucky Hit Chance",
          "Armor",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Impairment Reduction",
          "Cooldown Reduction",
          "Strength",
          "Fury per Second",
          "Ranks to Death Blow",
          "Ranks to Rupture",
          "Ranks to Steel Grasp"
      ]
  },
  "chest": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Thorns",
          "Healing Received",
          "Armor",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Impairment Reduction",
          "Strength",
          "Fury per Second",
          "Ranks to Challenging Shout",
          "Ranks to Ground Stomp",
          "Ranks to Iron Skin",
          "Ranks to Rallying Cry",
          "Ranks to Defensive Skills"
      ]
  },
  "gloves": {
      "affixes": [
          "Maximum Life",
          "Life per Hit",
          "Attack Speed",
          "Critical Strike Chance",
          "Critical Strike Damage",
          "Overpower Damage",
          "Vulnerable Damage",
          "Damage Over Time",
          "Lucky Hit Chance",
          "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
          "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
          "Armor",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Strength",
          "Ranks to Core Skills",
          "Ranks to Double Swing",
          "Ranks to Hammer of the Ancients",
          "Ranks to Rend",
          "Ranks to Upheaval",
          "Ranks to Whirlwind"
      ]
  },
  "pants": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Thorns",
          "Healing Received",
          "Armor",
          "Dodge Chance",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Impairment Reduction",
          "Strength",
          "Ranks to Basic Skills",
          "Ranks to Lunging Strike",
          "Ranks to Bash",
          "Ranks to Frenzy",
          "Ranks to Flay"
      ]
  },
  "boot": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Movement Speed",
          "Armor",
          "Dodge Chance",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Impairment Reduction",
          "Strength",
          "Fury per Second",
          "Ranks to Leap",
          "Ranks to Charge",
          "Ranks to War Cry",
          "Ranks to Kick",
          "Ranks to Brawling Skills",
          "Max Evade Charges",
          "Evade Grants Movement Speed",
          "Attacks Reduce Evade's Cooldown"
      ]
  },
  "amulet": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Life per Hit",
          "Maximum Resource",
          "Damage",
          "Attack Speed",
          "Critical Strike Chance",
          "Lucky Hit Chance",
          "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
          "Movement Speed",
          "Total Armor",
          "Resource Cost Reduction",
          "Cooldown Reduction",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Strength",
          "Fury on Kill",
          "Ranks to Counteroffensive",
          "Ranks to Heavy Handed",
          "Ranks to Slaying Strike",
          "Ranks to Cut to the Bone",
          "Ranks to Brute Force",
          "Ranks to Pit Fighter",
          "Ranks to No Mercy",
          "Ranks to Weapon Mastery Skills"
      ]
  },
  "ring": {
      "affixes": [
          "Maximum Life",
          "Life per Second",
          "Life per Hit",
          "Damage",
          "Attack Speed",
          "Critical Strike Chance",
          "Critical Strike Damage",
          "Overpower Damage",
          "Vulnerable Damage",
          "Damage Over Time",
          "Lucky Hit Chance",
          "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Resource Cost Reduction",
          "Strength",
          "Fury on Kill"
      ]
  },
  "weapon": {
      "affixes": [
          "Maximum Life",
          "Life per Hit",
          "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
          "Attack Speed",
          "Critical Strike Damage",
          "Overpower Damage",
          "Vulnerable Damage",
          "Damage Over Time",
          "Damage",
          "Resource Cost Reduction",
          "Strength",
          "Fury on Kill",
          "Critical Strike Damage (1h Sword)",
          "Critical Strike Damage (2h Sword)",
          "Damage to Healthy Enemies (1h Axe)",
          "Damage to Healthy Enemies (2h Axe)",
          "Overpower Damage (1h Mace)",
          "Overpower Damage (2h Mace)",
          "Damage to Injured Enemies (Polearm)",
          "Damage to Close Enemies (Dagger)",
          "Damage to Distant Enemies (Bow)",
          "Vulnerable Damage (Crossbow)",
          "Life on Kill (1h Scythe)",
          "Life on Kill (2h Scythe)",
          "Lucky Hit Chance (Wand)",
          "Damage to Crowd Controlled Enemies (Staff)"
      ]
  },
  "offhand": {
      "affixes": [
          "Maximum Life",
          "Life per Hit",
          "Maximum Resource",
          "Attack Speed",
          "Critical Strike Chance",
          "Lucky Hit Chance",
          "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
          "Cooldown Reduction",
          "Damage",
          "Resource Cost Reduction",
          "Cooldown Reduction (Shield)",
          "Damage Reduction (Shield)"
      ]
  },
  "shield": {
      "affixes": [
          "Block Chance",
          "Block Damage Reduction",
          "Main Hand Weapon Damage",
          "Thorns",
          "Maximum Life",
          "Thorns",
          "Life per Second",
          "Damage",
          "Attack Speed",
          "Critical Strike Chance",
          "Armor",
          "Resistance to All Elements",
          "Cold Resistance",
          "Fire Resistance",
          "Lightning Resistance",
          "Poison Resistance",
          "Shadow Resistance",
          "Damage Reduction",
          "Impairment Reduction"
      ]
  }
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\data\barbarian\barbarian_skills.json
[
  {
    "id": 40,
    "name": "Bash",
    "icon": "bash.png",
    "damageMultiplier": 0.3,
    "tags": ["Basic", "Bludgeoning", "Physical"]
  },
  {
    "id": 41,
    "name": "Flay (Total)",
    "icon": "flay.png",
    "damageMultiplier": 0.45,
    "tags": ["Basic", "Slashing", "DualWielding", "Physical", "Bleeding"]
  },
  {
    "id": 42,
    "name": "Frenzy",
    "icon": "frenzy.png",
    "damageMultiplier": 0.22,
    "tags": ["Basic", "DualWielding", "Physical"]
  },
  {
    "id": 43,
    "name": "Lunging Strike",
    "icon": "lunging_strike.png",
    "damageMultiplier": 0.33,
    "tags": ["Basic", "Slashing", "Bludgeoning", "DualWielding", "Physical"]
  },
  {
    "id": 44,
    "name": "Hammer of the Ancients",
    "icon": "hammer_of_the_ancients.png",
    "damageMultiplier": 0.5,
    "tags": ["Core", "Bludgeoning", "Physical"]
  },
  {
    "id": 45,
    "name": "Rend (Total)",
    "icon": "rend.png",
    "damageMultiplier": 1.08,
    "tags": ["Core", "Slashing", "DualWielding", "Physical", "Bleeding"]
  },
  {
    "id": 46,
    "name": "Double Swing (Hit)",
    "icon": "double_swing.png",
    "damageMultiplier": 0.4,
    "tags": ["Core", "DualWielding", "Physical"]
  },
  {
    "id": 47,
    "name": "Upheaval",
    "icon": "upheaval.png",
    "damageMultiplier": 0.7,
    "tags": ["Core", "Slashing", "Bludgeoning", "Physical"]
  },
  {
    "id": 48,
    "name": "Whirlwind",
    "icon": "whirlwind.png",
    "damageMultiplier": 0.1733,
    "tags": ["Core", "Channeled", "Physical", "Slashing", "Bludgeoning", "DualWielding"]
  },
  {
    "id": 49,
    "name": "Ground Stomp",
    "icon": "ground_stomp.png",
    "damageMultiplier": 0.095,
    "tags": ["Defensive", "Physical"]
  },
  {
    "id": 50,
    "name": "Kick (Total)",
    "icon": "kick.png",
    "damageMultiplier": 0.88,
    "tags": ["Brawling", "Physical"]
  },
  {
    "id": 51,
    "name": "Leap",
    "icon": "leap.png",
    "damageMultiplier": 0.325,
    "tags": ["Brawling", "Physical", "Slashing", "DualWielding", "Bludgeoning"]
  },
  {
    "id": 52,
    "name": "Charge",
    "icon": "charge.png",
    "damageMultiplier": 0.25,
    "tags": ["Brawling", "Physical", "Slashing", "DualWielding", "Bludgeoning"]
  },
  {
    "id": 53,
    "name": "Steel Grasp",
    "icon": "steel_grasp.png",
    "damageMultiplier": 0.23,
    "tags": ["WeaponMastery", "Physical"]
  },
  {
    "id": 54,
    "name": "Death Blow",
    "icon": "death_blow.png",
    "damageMultiplier": 1.2,
    "tags": ["WeaponMastery", "Physical", "Bludgeoning", "Slashing", "DualWielding"]
  },
  {
    "id": 55,
    "name": "Rupture",
    "icon": "rupture.png",
    "damageMultiplier": 0.13,
    "tags": ["WeaponMastery", "Slashing", "Physical"],
    "special": {
      "isUnique": false,
      "hasDot": true
    }
  },
  {
    "id": 56,
    "name": "Custom",
    "icon": "custom.png",
    "damageMultiplier": 1,
    "tags": ["Custom"],
    "special": {
      "isUnique": true,
      "hasDot": true
    }
  }
]





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\data\druid\druid_gear_affixes.json
{
    "helm": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Maximum Resource",
            "Thorns",
            "Healing Received",
            "Lucky Hit Chance",
            "Armor",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Impairment Reduction",
            "Cooldown Reduction",
            "Willpower",
            "Spirit per Second",
            "Ranks to Poison Creeper",
            "Ranks to Ravens",
            "Ranks to Wolves",
            "Ranks to Companion Skills"
        ]
    },
    "chest": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Thorns",
            "Healing Received",
            "Armor",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Impairment Reduction",
            "Willpower",
            "Spirit per Second",
            "Ranks to Blood Howl",
            "Ranks to Cyclone Armor",
            "Ranks to Debilitating Roar",
            "Ranks to Earthen Bulwark",
            "Ranks to Defensive Skills"
        ]
    },
    "glove": {
        "affixes": [
            "Maximum Life",
            "Life per Hit",
            "Attack Speed",
            "Critical Strike Chance",
            "Critical Strike Damage",
            "Overpower Damage",
            "Vulnerable Damage",
            "Damage Over Time",
            "Lucky Hit Chance",
            "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
            "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
            "Armor",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Ranks to Core Skills",
            "Willpower",
            "Ranks to Landslide",
            "Ranks to Lightning Storm",
            "Ranks to Pulverize",
            "Ranks to Shred",
            "Ranks to Tornado"
        ]
    },
    "pant": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Thorns",
            "Healing Received",
            "Armor",
            "Dodge Chance",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Impairment Reduction",
            "Ranks to Basic Skills",
            "Willpower",
            "Ranks to Earth Spike",
            "Ranks to Wind Shear",
            "Ranks to Storm Strike",
            "Ranks to Maul",
            "Ranks to Claw"
        ]
    },
    "boot": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Movement Speed",
            "Armor",
            "Dodge Chance",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Impairment Reduction",
            "Willpower",
            "Spirit per Second",
            "Ranks to Hurricane",
            "Ranks to Boulder",
            "Ranks to Rabies",
            "Ranks to Trample",
            "Ranks to Wrath Skills",
            "Max Evade Charges",
            "Evade Grants Movement Speed",
            "Attacks Reduce Evade's Cooldown"
        ]
    },
    "amulet": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Life per Hit",
            "Maximum Resource",
            "Damage",
            "Attack Speed",
            "Critical Strike Chance",
            "Lucky Hit Chance",
            "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
            "Movement Speed",
            "Total Armor",
            "Resource Cost Reduction",
            "Cooldown Reduction",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Willpower",
            "Spirit on Kill",
            "Ranks to Nature's Reach",
            "Ranks to Wild Impulses",
            "Ranks to Envenom",
            "Ranks to Crushing Earth",
            "Ranks to Resonance",
            "Ranks to Defiance",
            "Ranks to Natural Disaster",
            "Ranks to Heightened Senses",
            "Ranks to Call of the Wild",
            "Ranks to Quickshift",
            "Ranks to Toxic Claws"
        ]
    },
    "ring": {
        "affixes": [
            "Maximum Life",
            "Life per Second",
            "Life per Hit",
            "Damage",
            "Attack Speed",
            "Critical Strike Chance",
            "Critical Strike Damage",
            "Overpower Damage",
            "Vulnerable Damage",
            "Damage Over Time",
            "Lucky Hit Chance",
            "Lucky Hit: Up to a 22.5 - 31.5% Chance to Make Enemies Vulnerable for 2 Seconds",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Resource Cost Reduction",
            "Willpower",
            "Spirit on Kill"
        ]
    },
    "weapon": {
        "affixes": [
            "Maximum Life",
            "Life per Hit",
            "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
            "Attack Speed",
            "Critical Strike Damage",
            "Overpower Damage",
            "Vulnerable Damage",
            "Damage Over Time",
            "Damage",
            "Resource Cost Reduction",
            "Willpower",
            "Spirit on Kill",
            "Critical Strike Damage (1h Sword)",
            "Critical Strike Damage (2h Sword)",
            "Damage to Healthy Enemies (1h Axe)",
            "Damage to Healthy Enemies (2h Axe)",
            "Overpower Damage (1h Mace)",
            "Overpower Damage (2h Mace)",
            "Damage to Injured Enemies (Polearm)",
            "Damage to Close Enemies (Dagger)",
            "Damage to Distant Enemies (Bow)",
            "Vulnerable Damage (Crossbow)",
            "Life on Kill (1h Scythe)",
            "Life on Kill (2h Scythe)",
            "Lucky Hit Chance (Wand)",
            "Damage to Crowd Controlled Enemies (Staff)"
        ]
    },
    "offhand": {
        "affixes": [
            "Maximum Life",
            "Life per Hit",
            "Maximum Resource",
            "Attack Speed",
            "Critical Strike Chance",
            "Lucky Hit Chance",
            "Lucky Hit: Up to a 5% Chance to Restore Primary Resource",
            "Cooldown Reduction",
            "Damage",
            "Resource Cost Reduction",
            "Willpower",
            "Spirit on Kill"
        ]
    },
    "shield": {
        "affixes": [
            "Block Chance",
            "Block Damage Reduction",
            "Main Hand Weapon Damage",
            "Thorns",
            "Maximum Life",
            "Life per Second",
            "Damage",
            "Attack Speed",
            "Critical Strike Chance",
            "Armor",
            "Resistance to All Elements",
            "Cold Resistance",
            "Fire Resistance",
            "Lightning Resistance",
            "Poison Resistance",
            "Shadow Resistance",
            "Damage Reduction",
            "Impairment Reduction",
            "Willpower"
        ]
    }
}





// File: C:\Users\Az\Documents\D4UTReborn\D4UTReborn-New\src\data\druid\druid_skills.json
[
    {
      "id": 20,
      "name": "Earth Spike",
      "icon": "earth_spike.png",
      "damageMultiplier": 0.17,
      "tags": ["Basic", "Earth", "Nature", "Physical"]
    },
    {
      "id": 21,
      "name": "Claw",
      "icon": "claw.png",
      "damageMultiplier": 0.22,
      "tags": ["Basic", "Shapeshifting", "Werewolf", "Physical"]
    },
    {
      "id": 22,
      "name": "Storm Strike",
      "icon": "storm_strike.png",
      "damageMultiplier": 0.2,
      "tags": ["Basic", "Nature", "Storm", "Lightning"]
    },
    {
      "id": 23,
      "name": "Wind Shear",
      "icon": "wind_shear.png",
      "damageMultiplier": 0.18,
      "tags": ["Basic", "Nature", "Storm", "Physical"]
    },
    {
      "id": 24,
      "name": "Maul",
      "icon": "maul.png",
      "damageMultiplier": 0.22,
      "tags": ["Basic", "Shapeshifting", "Werebear", "Physical"]
    },
    {
      "id": 25,
      "name": "Landslide",
      "icon": "landslide.png",
      "damageMultiplier": 0.75,
      "tags": ["Core", "Nature", "Earth", "Physical"]
    },
    {
      "id": 26,
      "name": "Pulverize",
      "icon": "pulverize.png",
      "damageMultiplier": 0.5,
      "tags": ["Core", "Shapeshifting", "Werebear", "Physical"]
    },
    {
      "id": 27,
      "name": "Tornado",
      "icon": "tornado.png",
      "damageMultiplier": 0.35,
      "tags": ["Core", "Nature", "Storm", "Physical"]
    },
    {
      "id": 28,
      "name": "Lightning Storm",
      "icon": "lightning_storm.png",
      "damageMultiplier": 0.4,
      "tags": ["Core", "Nature", "Storm", "Channeled", "Lightning"]
    },
    {
      "id": 29,
      "name": "Shred (Total)",
      "icon": "shred.png",
      "damageMultiplier": 1.3,
      "tags": ["Core", "Shapeshifting", "Werewolf", "Physical"]
    },
    {
      "id": 291,
      "name": "Shred (1st hit)",
      "icon": "shred.png",
      "damageMultiplier": 0.25,
      "tags": ["Core", "Shapeshifting", "Werewolf", "Physical"]
    },
    {
      "id": 292,
      "name": "Shred (2nd hit)",
      "icon": "shred.png",
      "damageMultiplier": 0.35,
      "tags": ["Core", "Shapeshifting", "Werewolf", "Physical"]
    },
    {
      "id": 293,
      "name": "Shred (3rd hit)",
      "icon": "shred.png",
      "damageMultiplier": 0.7,
      "tags": ["Core", "Shapeshifting", "Werewolf", "Physical"]
    },
    {
      "id": 211,
      "name": "Cyclone Armor",
      "icon": "cyclone_armor.png",
      "damageMultiplier": 0.3,
      "tags": ["Defensive", "Nature", "Storm", "Physical"]
    },
    {
      "id": 212,
      "name": "Trample (Total)",
      "icon": "trample.png",
      "damageMultiplier": 1.2,
      "tags": ["Wrath", "Shapeshifting", "Werebear", "Physical"]
    },
    {
      "id": 2121,
      "name": "Trample (Hit)",
      "icon": "trample.png",
      "damageMultiplier": 0.75,
      "tags": ["Wrath", "Shapeshifting", "Werebear", "Physical"]
    },
    {
      "id": 2122,
      "name": "Trample (Terrain Hit)",
      "icon": "trample.png",
      "damageMultiplier": 0.45,
      "tags": ["Wrath", "Shapeshifting", "Werebear", "Physical"]
    },
    {
      "id": 213,
      "name": "Hurricane (Total)",
      "icon": "hurricane.png",
      "damageMultiplier": 1.34,
      "tags": ["Wrath", "Nature", "Storm", "Physical"]
    },
    {
      "id": 2131,
      "name": "Hurricane (DoT per Second)",
      "icon": "hurricane.png",
      "damageMultiplier": 0.1675,
      "tags": ["Wrath", "Nature", "Storm", "Physical"]
    },
    {
      "id": 214,
      "name": "Boulder",
      "icon": "boulder.png",
      "damageMultiplier": 0.33,
      "tags": ["Wrath", "Nature", "Earth", "Physical"]
    },
    {
      "id": 215,
      "name": "Ravens (Passive)",
      "icon": "ravens.png",
      "damageMultiplier": 0.026,
      "tags": ["Companion", "Physical"]
    },
    {
      "id": 216,
      "name": "Ravens (Active)",
      "icon": "ravens.png",
      "damageMultiplier": 0.2667,
      "tags": ["Companion", "Physical"]
    },
    {
      "id": 217,
      "name": "Poison Creeper (Passive)",
      "icon": "vine_creeper.png",
      "damageMultiplier": 0.0514,
      "tags": ["Companion", "Poison"]
    },
    {
      "id": 218,
      "name": "Poison Creeper (Active)",
      "icon": "vine_creeper.png",
      "damageMultiplier": 0.45,
      "tags": ["Companion", "Poison"]
    },
    {
      "id": 219,
      "name": "Wolves (Passive)",
      "icon": "wolves.png",
      "damageMultiplier": 0.078,
      "tags": ["Companion", "Physical"]
    },
    {
      "id": 220,
      "name": "Wolves (Active)",
      "icon": "wolves.png",
      "damageMultiplier": 1.1,
      "tags": ["Companion", "Physical"]
    },
    {
      "id": 221,
      "name": "Rabies (Total)",
      "icon": "rabies.png",
      "damageMultiplier": 1.0402,
      "tags": ["Wrath", "Shapeshifting", "Werewolf", "Poison"]
    },
    {
      "id": 2211,
      "name": "Rabies (Hit)",
      "icon": "rabies.png",
      "damageMultiplier": 0.28,
      "tags": ["Wrath", "Shapeshifting", "Werewolf", "Poison"]
    },
    {
      "id": 2212,
      "name": "Rabies (DoT per Second)",
      "icon": "rabies.png",
      "damageMultiplier": 0.1267,
      "tags": ["Wrath", "Shapeshifting", "Werewolf", "Poison"]
    },
    {
      "id": 222,
      "name": "Cataclysm",
      "icon": "cataclysm.png",
      "damageMultiplier": 0.64,
      "tags": ["Ultimate", "Nature", "Storm", "Lightning"],
      "special": {
        "isUnique": false,
        "hasDot": true
      }
    },
    {
      "id": 223,
      "name": "Lacerate",
      "icon": "lacerate.png",
      "damageMultiplier": 4.6,
      "tags": ["Ultimate", "Shapeshifting", "Werewolf", "Physical"],
      "special": {
        "isUnique": false,
        "hasDot": true
      }
    },
    {
      "id": 224,
      "name": "Custom",
      "icon": "custom.png",
      "damageMultiplier": 1,
      "tags": ["Custom"],
      "special": {
        "isUnique": true,
        "hasDot": true
      }
    }
  ]
  
